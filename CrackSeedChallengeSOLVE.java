import java.util.Random;

public class CrackSeedChallengeSOLVE {
	public static long foundSeed;
	
    public static void main(String[] args) {
    	//target sequence to replicate
        int[] targetSequence = {536, 927, 658, 121, 148, 801, 889, 714, 218, 182};
        
        // seeds for the random function are a long value, so we need to check from 0 to max
        for (long seed = 0; seed < Long.MAX_VALUE; seed++) {
            Random rand = new Random(seed);
          //Set match to true by default
            boolean match = true;
            

            
            for (int i = 0; i < targetSequence.length; i++) {
            	//if the number generated by the seed doesn't match the target sequence, set match to false
                // and start over with a new seed
                if (rand.nextInt(1000) != targetSequence[i]) {
                    match = false;
                    break;
                    
                }
            }

            if (match) {
            	//if the target sequence is matched, save the seed and print it
            	foundSeed= seed;
                System.out.println("Found seed: " + seed);
                break;
                
            }            
            
        }
        //Now that seed is found, print 15 numbers
        Random solve = new Random(foundSeed);
        
        for (int i = 0; i < 15; i++) {
            System.out.println(i+1+". "+ solve.nextInt(1000)); 
        }
        //Now we have the target sequence + 5 numbers, which are the flag components. The flag ends up being:
        //DREAM2024{260_577_83_767_900}
    }
}
